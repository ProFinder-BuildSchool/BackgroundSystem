@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

    參考集資車車 https://raisebububack.azurewebsites.net/Dashboard/Index   帳號:admin@gmail.com；密碼:admin
    COVID-19 https://ithelp.ithome.com.tw/articles/10252146 
*@
@{
}
<div class="container-fluid" id="app">
    <loading-screen v-if="isLoading"></loading-screen>
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
    </div>

    <!-- Content Row -->
    <div class="row">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                使用者總數
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{MemberCount}}人</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-person-booth fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                產品總數
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">{{QuotationCount}}項</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                訂單總數
                            </div>
                            <div class="row no-gutters align-items-center">
                                <div class="col-auto">
                                    <div class="h5 mb-0 mr-3 font-weight-bold text-gray-800">{{OrderCount}}件</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-double fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pending Requests Card Example -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                銷售總額
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">NT${{OrderRevenue}}</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Content Row -->

    <div class="row">

        @*近五日產品上架件數折線圖 統計圖表*@
        <!-- Area Chart -->
        <div class="col-xl-8 col-lg-7">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">近五日上架服務件數折線圖</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    @*<div class="chart-area">*@
                    <div class="barchart pt-6 pb-8">
                        @*<canvas id="myAreaChart"></canvas>*@
                        <bar-chart :height="200" :tick="{min: 0, max: 5}"></bar-chart>
                    </div>
                </div>
            </div>
        </div>

        <!-- Pie Chart -->
        <div class="col-xl-4 col-lg-5">
            @*前五大項商品比例 統計圖表*@
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">前三大項服務比例圓餅圖</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">

                    <div class="app pt-4 pb-2" id="piechar">
                        <pie-chart></pie-chart>
                    </div>

                    @*<div class="chart pt-4 pb-2" id="piechart">*@
                    @*<div id="chart" class="pt-4 pb-2">
                            <apexchart type="donut" :options="chartOptions" :series="series"></apexchart>
                        </div>*@
                    @*<div id="chart pt-4 pb-2">
                            <apexchart type="pie" width="380" :options="chartOptions" :series="series"></apexchart>
                        </div>*@
                    @*</div>*@

                </div>
            </div>
        </div>
    </div>
</div>

@section topCSS{ 
<style>
    #loading {
        color: gray; 
        font-size: 32px;
        padding-top: 10vh;
        height :100vh;
        text-align :center;
    }
</style>
}

@section endJS{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
    <script src="https://unpkg.com/vue-chartjs/dist/vue-chartjs.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue-apexcharts"></script>
    <script src="https://unpkg.com/vue/dist/vue.min.js"></script>
    <script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue.min.js"></script>
    <script src="https://unpkg.com/bootstrap-vue@latest/dist/bootstrap-vue-icons.min.js"></script>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>






    <script>
        Vue.component('loading-screen', {
            template: '<div id="loading">Loading...</div>'
        })

        var app = new Vue({
            el: "#app",
            data() {
                return {
                 
                    MemberCount: 0,
                    OrderCount: 0,
                    QuotationCount: 0,
                    OrderRevenue: 0,
                    isLoading: true
                    //Piechartname: [],
                    //Piechartcnt: []
                }
            },
            mounted() {
                setTimeout(() => {
                    this.isLoading = false
                }, 5000)
            },
            created: function () {
                axios({ method: "Get", url: "/api/Dashboard" }).then(res => {
                    this.MemberCount = JSON.parse(res.data.result).MemberCount;
                    this.QuotationCount = JSON.parse(res.data.result).QuotationCount;
                    this.OrderCount = JSON.parse(res.data.result).OrderCount;
                    this.OrderRevenue = JSON.parse(res.data.result).OrderRevenue;
                    //this.Piechartname.push(...JSON.parse(res.data.result).PieChartName);
                    //this.Piechartcnt.push(...JSON.parse(res.data.result).PieChartCnt);
                    console.log(JSON.parse(res.data.result));
                });
            }
        
        })

    </script>

    @*Vue折線圖*@
<script>
    Vue.component('bar-chart', {
        extends: VueChartJs.Bar,
        //props:  ["parentmsg"],
        data()//: function ()
        {
            return {
                datacollection: {
                
                    labels:[],
                    datasets: [
                        {
                            label: '上架件數',
                            backgroundColor: '#f87979',
                            data: []
                        }
                    ],
                },
                options: {
                    responsive: true,
                    legend: {
                        display: true,
                        position: 'top',
                    },

                    scales: {
                        //xAxes: [{
                        //    gridLines: {
                        //        display: true
                        //    }
                        //}],
                        yAxes: [{
                            gridLines: {
                                display: true
                            },
                            ticks: {
                                min: 0,
                                max: 5,
                                stepSize: 1,
                                //min: this.tick.min,
                                //max: this.tick.max,
                            }
                        }]
                    }
                },
            }
        },
     
        mounted() {
            // this.chartData is created in the mixin
            this.renderChart(this.datacollection, this.options)
            axios({ method: "Get", url: "/api/Dashboard" }).then(res => {
                this.datacollection.labels = JSON.parse(res.data.result).LaunchDay;
                this.datacollection.datasets[0].data = JSON.parse(res.data.result).LaunchCnt;
            });
        },
       
    })

    var vm = new Vue({
        el: '.barchart',
    })
</script>

    @*<script>
        Vue.component('line-chart', {
            extends: VueChartJs.Line,
            mounted() {
                this.renderChart({
                    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
                    datasets: [
                        {
                            label: 'Data One',
                            backgroundColor: '#f87979',
                            data: [40, 39, 10, 40, 39, 80, 40]
                        }
                    ]
                }, { responsive: true, maintainAspectRatio: false })
            }
        })
    </script>*@

    @*Vue圓餅圖*@
    <script>
        Vue.component('pie-chart', {
            extends: VueChartJs.Pie,
            //props:  ["parentmsg"],
            data()//: function ()
            {
                return {
                 
                    datacollection: {
                        //labels: this.parentmsg,
                        labels: ['Pie 1', 'Pie 2', 'Pie 3'],
                        datasets: [
                            {
                                backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],
                                data: [1, 2, 3]
                            },
                        ],
                    },
                    options: {
                        responsive: true,
                        legend: {
                            display: true,
                            position: 'right',
                        },
                    },
                }
            },
           
            mounted() {
                // this.chartData is created in the mixin
                this.renderChart(this.datacollection, this.options)
                axios({ method: "Get", url: "/api/Dashboard" }).then(res => {
                    this.datacollection.labels = JSON.parse(res.data.result).PieChartName;
                    this.datacollection.datasets[0].data = JSON.parse(res.data.result).PieChartCnt;
                    //for (let i = 0; i < response.data.length; i++) {
                    //    this.datacollection.labels.push(response.data[i].value);
                    //    this.datacollection.datasets.data.push(response.data[i].key);
                    //}
                    //this.items.push(...JSON.parse(res.data.result));
                    //this.allitems = this.items;
                    //console.log(this.items);
                    //this.datacollection.labels = ['Pie 4', 'Pie 6', 'Pie 7'];
                    //this.data.datacollection.datasets[0].data = JSON.parse(res.data.result).PieChartCnt;
                });

            }
        })

        var vm = new Vue({
            el: '.app',
        })
    </script>


    @*<script>
            var options = {
                series: [44, 55, 41, 17, 15],
                chart: {
                    type: 'donut',
                },
                responsive: [{
                    breakpoint: 480,
                    options: {
                        chart: {
                            width: 200
                        },
                        legend: {
                            position: 'bottom'
                        }
                    }
                }]
            };

            var chart = new ApexCharts(document.querySelector("#chart"), options);
            chart.render();

        </script>*@











    @*折線圖*@
    @*<script>

        $(document).ready(function () {
            // Set new default font family and font color to mimic Bootstrap's default styling
            Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
            Chart.defaults.global.defaultFontColor = '#858796';

            function number_format(number, decimals, dec_point, thousands_sep) {
                // *     example: number_format(1234.56, 2, ',', ' ');
                // *     return: '1 234,56'
                number = (number + '').replace(',', '').replace(' ', '');
                var n = !isFinite(+number) ? 0 : +number,
                    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                    s = '',
                    toFixedFix = function (n, prec) {
                        var k = Math.pow(10, prec);
                        return '' + Math.round(n * k) / k;
                    };
                // Fix for IE parseFloat(0.55).toFixed(0) = 0;
                s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
                if (s[0].length > 3) {
                    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
                }
                if ((s[1] || '').length < prec) {
                    s[1] = s[1] || '';
                    s[1] += new Array(prec - s[1].length + 1).join('0');
                }
                return s.join(dec);
            }

            // Area Chart Example
            var ctx = document.getElementById("myAreaChart");
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    datasets: [{
                        label: "Earnings",
                        lineTension: 0.3,
                        backgroundColor: "rgba(78, 115, 223, 0.05)",
                        borderColor: "rgba(78, 115, 223, 1)",
                        pointRadius: 3,
                        pointBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointBorderColor: "rgba(78, 115, 223, 1)",
                        pointHoverRadius: 3,
                        pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                        pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                        pointHitRadius: 10,
                        pointBorderWidth: 2,
                        data: [0, 10000, 5000, 15000, 10000, 20000, 15000, 25000, 20000, 30000, 25000, 40000],
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    layout: {
                        padding: {
                            left: 10,
                            right: 25,
                            top: 25,
                            bottom: 0
                        }
                    },
                    scales: {
                        xAxes: [{
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false,
                                drawBorder: false
                            },
                            ticks: {
                                maxTicksLimit: 7
                            }
                        }],
                        yAxes: [{
                            ticks: {
                                maxTicksLimit: 5,
                                padding: 10,
                                // Include a dollar sign in the ticks
                                callback: function (value, index, values) {
                                    return '$' + number_format(value);
                                }
                            },
                            gridLines: {
                                color: "rgb(234, 236, 244)",
                                zeroLineColor: "rgb(234, 236, 244)",
                                drawBorder: false,
                                borderDash: [2],
                                zeroLineBorderDash: [2]
                            }
                        }],
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        titleMarginBottom: 10,
                        titleFontColor: '#6e707e',
                        titleFontSize: 14,
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        intersect: false,
                        mode: 'index',
                        caretPadding: 10,
                        callbacks: {
                            label: function (tooltipItem, chart) {
                                var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                                return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
                            }
                        }
                    }
                }
            });
        })

    </script>*@


    @*圓餅圖*@
    @*<script>
            // Set new default font family and font color to mimic Bootstrap's default styling
            Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
            Chart.defaults.global.defaultFontColor = '#858796';

            // Pie Chart Example
            var ctx = document.getElementById("myPieChart");
            var myPieChart = new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ["Direct", "Referral", "Social"],
                    datasets: [{
                        data: [5, 6, 5],
                        backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],
                        hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],
                        hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }],
                },
                options: {
                    maintainAspectRatio: false,
                    tooltips: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        xPadding: 15,
                        yPadding: 15,
                        displayColors: false,
                        caretPadding: 10,
                    },
                    legend: {
                        display: false
                    },
                    cutoutPercentage: 80,
                },
            });


        </script>*@



}

