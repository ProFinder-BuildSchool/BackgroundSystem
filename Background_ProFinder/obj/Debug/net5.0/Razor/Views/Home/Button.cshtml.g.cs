#pragma checksum "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\Home\Button.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "07002054cb1497100a64a85412545a17d50670a5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Button), @"mvc.1.0.view", @"/Views/Home/Button.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"07002054cb1497100a64a85412545a17d50670a5", @"/Views/Home/Button.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1042ab2bd1801a3916ccb856993cba548ccba7e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Button : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\Home\Button.cshtml"
   
    ViewData["Title"] = "Button";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""container-fluid"">

    <!-- Page Heading -->
    <h1 class=""h3 mb-4 text-gray-800"">Buttons</h1>

    <div class=""row"">

        <div class=""col-lg-6"">

            <!-- Circle Buttons -->
            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Circle Buttons</h6>
                </div>
                <div class=""card-body"">
                    <p>
                        Use Font Awesome Icons (included with this theme package) along with the circle
                        buttons as shown in the examples below!
                    </p>
                    <!-- Circle Buttons (Default) -->
                    <div class=""mb-2"">
                        <code>.btn-circle</code>
                    </div>
                    <a href=""#"" class=""btn btn-primary btn-circle"">
                        <i class=""fab fa-facebook-f""></i>
                    </a>
                    <a");
            WriteLiteral(@" href=""#"" class=""btn btn-success btn-circle"">
                        <i class=""fas fa-check""></i>
                    </a>
                    <a href=""#"" class=""btn btn-info btn-circle"">
                        <i class=""fas fa-info-circle""></i>
                    </a>
                    <a href=""#"" class=""btn btn-warning btn-circle"">
                        <i class=""fas fa-exclamation-triangle""></i>
                    </a>
                    <a href=""#"" class=""btn btn-danger btn-circle"">
                        <i class=""fas fa-trash""></i>
                    </a>
                    <!-- Circle Buttons (Small) -->
                    <div class=""mt-4 mb-2"">
                        <code>.btn-circle .btn-sm</code>
                    </div>
                    <a href=""#"" class=""btn btn-primary btn-circle btn-sm"">
                        <i class=""fab fa-facebook-f""></i>
                    </a>
                    <a href=""#"" class=""btn btn-success btn-circle btn-sm"">
            ");
            WriteLiteral(@"            <i class=""fas fa-check""></i>
                    </a>
                    <a href=""#"" class=""btn btn-info btn-circle btn-sm"">
                        <i class=""fas fa-info-circle""></i>
                    </a>
                    <a href=""#"" class=""btn btn-warning btn-circle btn-sm"">
                        <i class=""fas fa-exclamation-triangle""></i>
                    </a>
                    <a href=""#"" class=""btn btn-danger btn-circle btn-sm"">
                        <i class=""fas fa-trash""></i>
                    </a>
                    <!-- Circle Buttons (Large) -->
                    <div class=""mt-4 mb-2"">
                        <code>.btn-circle .btn-lg</code>
                    </div>
                    <a href=""#"" class=""btn btn-primary btn-circle btn-lg"">
                        <i class=""fab fa-facebook-f""></i>
                    </a>
                    <a href=""#"" class=""btn btn-success btn-circle btn-lg"">
                        <i class=""fas fa-check""></");
            WriteLiteral(@"i>
                    </a>
                    <a href=""#"" class=""btn btn-info btn-circle btn-lg"">
                        <i class=""fas fa-info-circle""></i>
                    </a>
                    <a href=""#"" class=""btn btn-warning btn-circle btn-lg"">
                        <i class=""fas fa-exclamation-triangle""></i>
                    </a>
                    <a href=""#"" class=""btn btn-danger btn-circle btn-lg"">
                        <i class=""fas fa-trash""></i>
                    </a>
                </div>
            </div>

            <!-- Brand Buttons -->
            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                    <h6 class=""m-0 font-weight-bold text-primary"">Brand Buttons</h6>
                </div>
                <div class=""card-body"">
                    <p>
                        Google and Facebook buttons are available featuring each company's respective
                        brand color. They are used on th");
            WriteLiteral(@"e user login and registration pages.
                    </p>
                    <p>
                        You can create more custom buttons by adding a new color variable in the
                        <code>_variables.scss</code> file and then using the Bootstrap button variant
                        mixin to create a new style, as demonstrated in the <code>_buttons.scss</code>
                        file.
                    </p>
                    <a href=""#"" class=""btn btn-google btn-block"">
                        <i class=""fab fa-google fa-fw""></i>
                        .btn-google
                    </a>
                    <a href=""#"" class=""btn btn-facebook btn-block"">
                        <i class=""fab fa-facebook-f fa-fw""></i> .btn-facebook
                    </a>

                </div>
            </div>

        </div>

        <div class=""col-lg-6"">

            <div class=""card shadow mb-4"">
                <div class=""card-header py-3"">
                ");
            WriteLiteral(@"    <h6 class=""m-0 font-weight-bold text-primary"">Split Buttons with Icon</h6>
                </div>
                <div class=""card-body"">
                    <p>
                        Works with any button colors, just use the <code>.btn-icon-split</code> class and
                        the markup in the examples below. The examples below also use the
                        <code>.text-white-50</code> helper class on the icons for additional styling,
                        but it is not required.
                    </p>
                    <a href=""#"" class=""btn btn-primary btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-flag""></i>
                        </span>
                        <span class=""text"">Split Button Primary</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-success btn-icon-split"">
                        <span class=""ic");
            WriteLiteral(@"on text-white-50"">
                            <i class=""fas fa-check""></i>
                        </span>
                        <span class=""text"">Split Button Success</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-info btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-info-circle""></i>
                        </span>
                        <span class=""text"">Split Button Info</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-warning btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-exclamation-triangle""></i>
                        </span>
                        <span class=""text"">Split Button Warning</span>
                    </a>
                    <div class=""my-2""></div>
                    ");
            WriteLiteral(@"<a href=""#"" class=""btn btn-danger btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-trash""></i>
                        </span>
                        <span class=""text"">Split Button Danger</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-secondary btn-icon-split"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-arrow-right""></i>
                        </span>
                        <span class=""text"">Split Button Secondary</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-light btn-icon-split"">
                        <span class=""icon text-gray-600"">
                            <i class=""fas fa-arrow-right""></i>
                        </span>
                        <span class=""text"">Split Button Light</span>
     ");
            WriteLiteral(@"               </a>
                    <div class=""mb-4""></div>
                    <p>Also works with small and large button classes!</p>
                    <a href=""#"" class=""btn btn-primary btn-icon-split btn-sm"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-flag""></i>
                        </span>
                        <span class=""text"">Split Button Small</span>
                    </a>
                    <div class=""my-2""></div>
                    <a href=""#"" class=""btn btn-primary btn-icon-split btn-lg"">
                        <span class=""icon text-white-50"">
                            <i class=""fas fa-flag""></i>
                        </span>
                        <span class=""text"">Split Button Large</span>
                    </a>
                </div>
            </div>

        </div>

    </div>

</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
