#pragma checksum "C:\Users\yoyo4\Desktop\ProFinderBackGround\Background_ProFinder\Views\Home\Homepage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bc2454ce7e3fe173a809e7aa3f5c7b62e84e003d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Homepage), @"mvc.1.0.view", @"/Views/Home/Homepage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\yoyo4\Desktop\ProFinderBackGround\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\yoyo4\Desktop\ProFinderBackGround\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bc2454ce7e3fe173a809e7aa3f5c7b62e84e003d", @"/Views/Home/Homepage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1042ab2bd1801a3916ccb856993cba548ccba7e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Homepage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\yoyo4\Desktop\ProFinderBackGround\Background_ProFinder\Views\Home\Homepage.cshtml"
  
    ViewData["Title"] = "Homepage";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""p-2"">
    <h3 class=""border-bottom"">設定banner投放</h3>


    <div class=""fileArea"">
            <p class=""border-bottom"">廣告1</p>
            <img src=""https://icons-for-free.com/iconfiles/png/512/add+photo+plus+upload+icon-1320184050039319890.png"" class=""imgtest"" alt=""Alternate Text"" />
            <input type=""file"" class=""file-upload "">
        </div>

        <div class=""fileArea"">
            <p class=""border-bottom"">廣告2</p>
            <img src=""https://icons-for-free.com/iconfiles/png/512/add+photo+plus+upload+icon-1320184050039319890.png"" class=""imgtest"" alt=""Alternate Text"" />
            <input type=""file"" class=""file-upload"">

        </div>


        <div class=""fileArea"">
            <p class=""border-bottom"">廣告3</p>
            <img src=""https://icons-for-free.com/iconfiles/png/512/add+photo+plus+upload+icon-1320184050039319890.png"" class=""imgtest"" alt=""Alternate Text"" />
            <input type=""file"" class=""file-upload"">

        </div>


    <div id=""app"">
  ");
            WriteLiteral(@"      <h3 class=""border-bottom"">設定精選作品</h3>
        <table id=""myTable"" class=""cell-border compact stripe"" style=""width:100%"">
            <thead>
                <tr>
                    <th scope=""col"">選擇精選</th>
                    <th scope=""col"">作品編號</th>
                    <th scope=""col"">作品圖片</th>
                    <th scope=""col"">作品分類</th>
                    <th scope=""col"">新增作品敘述</th>
                    <th scope=""col"">作品工作室</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for=""item in WorkList"">
                    <td>
                        <input class=""checkbox"" type=""checkbox"" />
                    </td>
                    <td>
                        <p>{{ item.workID }}</p>
                    </td>
                    <td>
                        
                        
                            <img class=""workPic"" :src=""item.workPicture[0]""");
            BeginWriteAttribute("alt", " alt=\"", 2017, "\"", 2023, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                        \r\n                    </td>\r\n                    <td>\r\n                        {{ item.subCategoryName }}\r\n                    </td>\r\n                    <td>\r\n                        <input type=\"text\"");
            BeginWriteAttribute("name", " name=\"", 2255, "\"", 2262, 0);
            EndWriteAttribute();
            BeginWriteAttribute("value", " value=\"", 2263, "\"", 2271, 0);
            EndWriteAttribute();
            WriteLiteral(" />\r\n                    </td>\r\n                    <td>\r\n                        <span class=\"count\">{{ item.studio }}</span>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n\r\n\r\n</div>\r\n");
            DefineSection("TopCSS", async() => {
                WriteLiteral(@"
    <style>
        .workPic{
            height:100px;
            width:100px;
        }
        .file-upload {
            position: absolute;
            top: 0;
            left: 0;
            width: 300px;
            height: 200px;
            z-index: 3;
            opacity: 0;
        }

        .fileArea {
            position: relative;
            display: inline-block;
            width: 300px;
            height: 230px;
            margin: 10px
        }



        .imgtest {
            width: 300px;
            height: 200px;
        }
    </style>


");
            }
            );
            DefineSection("endJS", async() => {
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css"">
    <script src=""https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js""></script>
    <script src=""https://unpkg.com/axios/dist/axios.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/vue@2.6.14""></script>
    <script>
        let app = new Vue({
            el: '#app',
            data: {
                WorkList: '',
            },
            methods: {
                GetworkList() {
                    axios.get('/api/HomepageAPI/GetWorkList').then(res => {
                        console.log(res.data)
                        this.WorkList = res.data.result

                    })
                }
            },
            created() {
                this.GetworkList();
                $('#myTable').DataTable({
                    ""info"": false,
                    ""bLengthChange"": false,
                    ""pageLength"": 5
                })
           ");
                WriteLiteral(@" }

        })

           


    </script>
    <script>

            var cloudinary_url = 'https://api.cloudinary.com/v1_1/detbgirwx/upload'
            var cloudinary_upload_preset = 'jsxr0l9e';


            let imgtest = document.querySelectorAll('.imgtest');
            let fileupload = document.querySelectorAll('.file-upload');




            fileupload.forEach(function (item, index) {
                item.addEventListener('change', function (event) {

                    let file = event.target.files[0];
                    let imgtestitem = imgtest[index]
                    let formData = new FormData();
                    formData.append('file', file);
                    formData.append('upload_preset', cloudinary_upload_preset);


                    axios({
                        url: cloudinary_url,
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
      ");
                WriteLiteral(@"                  },
                        data: formData
                    }).then(function (res) {
                        console.log(res);
                        let data = {
                            BannerId: index + 1,
                            BannerTitle: '測試',
                            BannerImgUrl: res.data.secure_url
                        }
                        axios.put('/api/HomepageAPI/AddBannerData', data).then(res => {
                            console.log(res);

                        })

                        imgtestitem.src = res.data.secure_url
                    }).catch(function (err) {
                        console.log(err);
                    })
                })
            })


            function GetBannerData() {
                axios.get('/api/HomepageAPI/GetBannerData').then(res => {
                    let BannerData = res.data.result
                    console.log(BannerData)
                    imgtest.forEach(function (it");
                WriteLiteral(@"em, index) {
                        item.src = BannerData[index].bannerImgUrl
                    })
                })
            }





            window.onload = function () {
                GetBannerData();
            }










        </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
