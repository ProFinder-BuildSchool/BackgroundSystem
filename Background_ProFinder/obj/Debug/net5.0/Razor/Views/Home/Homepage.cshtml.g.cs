#pragma checksum "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\Home\Homepage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c2a53088811b475395e6d52dafcefe717ed37318"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Homepage), @"mvc.1.0.view", @"/Views/Home/Homepage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c2a53088811b475395e6d52dafcefe717ed37318", @"/Views/Home/Homepage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1042ab2bd1801a3916ccb856993cba548ccba7e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Homepage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\Home\Homepage.cshtml"
  
    ViewData["Title"] = "Homepage";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""p-2"">
    <h3 class=""border-bottom"">設定banner投放</h3>


    <div class=""fileArea"">
        <p class=""border-bottom"">廣告1</p>
        <img src=""https://icons-for-free.com/iconfiles/png/512/add+photo+plus+upload+icon-1320184050039319890.png"" class=""imgtest"" alt=""Alternate Text"" />
        <input type=""file"" class=""file-upload "">
    </div>

    <div class=""fileArea"">
        <p class=""border-bottom"">廣告2</p>
        <img src=""https://icons-for-free.com/iconfiles/png/512/add+photo+plus+upload+icon-1320184050039319890.png"" class=""imgtest"" alt=""Alternate Text"" />
        <input type=""file"" class=""file-upload"">

    </div>


    <div class=""fileArea"">
        <p class=""border-bottom"">廣告3</p>
        <img src=""https://icons-for-free.com/iconfiles/png/512/add+photo+plus+upload+icon-1320184050039319890.png"" class=""imgtest"" alt=""Alternate Text"" />
        <input type=""file"" class=""file-upload"">

    </div>


    <div id=""app"" class=""mt-3"">
        <h3 class=""border-bottom"">設定精選作品</h3>");
            WriteLiteral(@"
        <table id=""myTable"" class=""cell-border  compact  stripe"" style=""width:100%"">
            <thead>
                <tr>
                    <th scope=""col"">選擇精選</th>
                    <th scope=""col"">作品編號</th>
                    <th scope=""col"">作品圖片</th>
                    <th scope=""col"">作品分類</th>
                    <th scope=""col"">新增作品敘述</th>
                    <th scope=""col"">作品工作室</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for=""(item,index) in WorkList"">
                    <td>
                        <input class=""checkbox"" v-if=""item.featured==0"" type=""checkbox"" ");
            WriteLiteral("@change=\"setFeatureWork(index)\" />\r\n                        <input class=\"checkbox\" v-else-if=\"item.featured==1\" checked type=\"checkbox\" ");
            WriteLiteral(@"@change=""setFeatureWork(index)"" />
                    </td>
                    <td>
                        <p>{{ item.workID }}</p>
                    </td>
                    <td>


                        <img class=""workPic"" :src=""item.workPicture[0]""");
            BeginWriteAttribute("alt", " alt=\"", 2127, "\"", 2133, 0);
            EndWriteAttribute();
            WriteLiteral(@" />

                    </td>
                    <td>
                        {{ item.subCategoryName }}
                    </td>
                    <td>
                        <label for=""memo"">備註:<br />{{item.memo}}</label>
                        <input type=""text"" v-if=""item.featured==0"" disabled id=""memo""");
            BeginWriteAttribute("value", " value=\"", 2458, "\"", 2466, 0);
            EndWriteAttribute();
            WriteLiteral(" v-model=\"item.memo\" />\r\n                        <input type=\"text\" v-if=\"item.featured==1\"  id=\"memo\"");
            BeginWriteAttribute("value", " value=\"", 2569, "\"", 2577, 0);
            EndWriteAttribute();
            WriteLiteral(" v-model=\"item.memo\"  ");
            WriteLiteral(@"@change=""addFeatureWorkMomo(index)""/>
                    </td>
                    <td>
                        <span class=""count"">{{ item.studio }}</span>
                    </td>
                </tr>
            </tbody>
        </table>

    </div>




</div>
");
            DefineSection("TopCSS", async() => {
                WriteLiteral(@"
    <style>
        .workPic {
            height: 100px;
            width: 100px;
        }

        .file-upload {
            position: absolute;
            top: 0;
            left: 0;
            width: 300px;
            height: 200px;
            z-index: 3;
            opacity: 0;
        }

        .fileArea {
            position: relative;
            display: inline-block;
            width: 300px;
            height: 230px;
            margin: 10px
        }



        .imgtest {
            width: 300px;
            height: 200px;
        }
    </style>


");
            }
            );
            DefineSection("endJS", async() => {
                WriteLiteral(@"
    <link rel=""stylesheet"" href=""https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css"">
    <script src=""https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js""></script>
    <script src=""https://unpkg.com/axios/dist/axios.min.js""></script>
    <script src=""https://cdn.jsdelivr.net/npm/vue@2.6.14""></script>
    <script src=""https://unpkg.com/vue/dist/vue.js""></script>
    <script src=""https://unpkg.com/vue-toastr/dist/vue-toastr.umd.min.js""></script>
    <script>
        


        let app = new Vue({
            el: '#app',
            data: {
                WorkList: '',
                FeatureWorkList: ''
            },
            methods: {
                GetworkList() {
                    axios.get('/api/HomepageAPI/GetWorkList').then(res => {
                        console.log(res.data)
                        
                        this.WorkList = res.data.result
                        this.comfirmFeatureWorks() 
                    })
             ");
                WriteLiteral(@"   },
                addFeatureWorkMomo(index) {
                    //axios.put('/api/HomepageAPI/addFeatureWorkMomo',
                    //    {
                    //        WorkID: this.WorkList[index].workID,
                    //        Memo: this.WorkList[index].memo,
                    //        Featured: this.WorkList[index].featured
                    //    })
                },
                setFeatureWork(index) {

                    axios.put('/api/HomepageAPI/SetFeatureWorkList',
                        {
                            WorkID: this.WorkList[index].workID,
                            Memo: this.WorkList[index].memo,
                            Featured: this.WorkList[index].featured
                        }
                    ).then(res =>
                    {
                        this.GetworkList();
                        this.comfirmFeatureWorks() 

                    })
                },

                comfirmFeatureWorks() {
         ");
                WriteLiteral(@"           this.FeatureWorkList = [];
                    this.FeatureWorkList = this.WorkList.filter(x => x.featured == 1)
                    if (this.FeatureWorkList.length < 3) {
                        document.querySelectorAll('.checkbox').forEach(function (item) {
                            item.disabled = false;
                        })
                    }
                    if (this.FeatureWorkList.length == 3) {
                        console.log(this.FeatureWorkList.length)
                        this.$toastr.Add({
                            name: ""myInfo"",
                            title: ""已勾選3筆資料"",
                            msg: ""精選動態最多只能設定3筆!!"",
                            clickClose: false, //Disable click to close 
                            timeout: 1500,
                            position: ""toast-top-center"",
                            type: ""warning"", //error, warning, success, info
                            preventDuplicates: true,
                     ");
                WriteLiteral(@"       progressbar: false
                        });
                        document.querySelectorAll('.checkbox').forEach(function (item) {
                            if (item.checked) {

                            } else {
                                item.disabled = true;
                            }

                        })
                    }
                }
            },
            created() {
                this.GetworkList();
            }

        })
        

       



    </script>
    <script>

        var cloudinary_url = 'https://api.cloudinary.com/v1_1/detbgirwx/upload'
        var cloudinary_upload_preset = 'jsxr0l9e';


        let imgtest = document.querySelectorAll('.imgtest');
        let fileupload = document.querySelectorAll('.file-upload');

        $(document).ready(function () {
            GetBannerData();
            $('#myTable').DataTable({
         ""info"": false, ""bLengthChange"": false, ""pageLength"": 5
       })
        })");
                WriteLiteral(@"
        
       
        fileupload.forEach(function (item, index) {
            item.addEventListener('change', function (event) {

                let file = event.target.files[0];
                let imgtestitem = imgtest[index]
                let formData = new FormData();
                formData.append('file', file);
                formData.append('upload_preset', cloudinary_upload_preset);


                axios({
                    url: cloudinary_url,
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    data: formData
                }).then(function (res) {
                    console.log(res);
                    let data = {
                        BannerId: index + 1,
                        BannerTitle: '測試',
                        BannerImgUrl: res.data.secure_url
                    }
                    axios.put('/api/HomepageAP");
                WriteLiteral(@"I/AddBannerData', data).then(res => {
                        console.log(res);

                    })

                    imgtestitem.src = res.data.secure_url
                }).catch(function (err) {
                    console.log(err);
                })
            })
        })


        function GetBannerData() {
            axios.get('/api/HomepageAPI/GetBannerData').then(res => {
                let BannerData = res.data.result
                console.log(BannerData)
                imgtest.forEach(function (item, index) {
                    item.src = BannerData[index].bannerImgUrl
                })
            })
        }













    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
