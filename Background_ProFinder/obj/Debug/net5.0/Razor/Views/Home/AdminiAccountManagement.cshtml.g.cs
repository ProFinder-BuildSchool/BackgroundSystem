#pragma checksum "C:\Users\chris\Desktop\BackgroundSystem\Background_ProFinder\Views\Home\AdminiAccountManagement.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "95a33c59ea91bbe4e0cc725566033095d3316d44"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AdminiAccountManagement), @"mvc.1.0.view", @"/Views/Home/AdminiAccountManagement.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\User\Desktop\BackgroundSystem_Profinder\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\User\Desktop\BackgroundSystem_Profinder\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"08d4380b4fa2c6c833e18f46c4b38856273a9c9e", @"/Views/Home/AdminiAccountManagement.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1042ab2bd1801a3916ccb856993cba548ccba7e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_AdminiAccountManagement : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("col-12"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\User\Desktop\BackgroundSystem_Profinder\Background_ProFinder\Views\Home\AdminiAccountManagement.cshtml"
  
    ViewData["Title"] = "AdminiAccountManagement";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div id=\"account\">\r\n    <div>\r\n        <button class=\"addaccountbtn\" ");
            WriteLiteral(@"@click.prevent=""AddUserModal"">新增帳號</button>
    </div>

    <div class=""cart_area   active tab-pane fade show"" id=""tabs-1"" role=""tabpanel"">
        <div class=""container"">
            <div class=""cart_inner"">
                <div class=""table-responsive"">
                    <table class=""table"">
                        <thead>
                            <tr>
                                <th scope=""col"">狀態</th>
                                <th scope=""col"">管理員帳號</th>
                                <th scope=""col"">管理員Email</th>
                                <th scope=""col"">管理員名稱</th>
                                <th scope=""col"">權限</th>
                                <th scope=""col"">設定</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for=""(item,index) in userdataArray"">
                                <td>
                                    <div");
            BeginWriteAttribute("class", " class=\"", 1112, "\"", 1120, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                                        <div v-if=""item.deactivated == 0"">使用中</div>
                                        <div v-else class=""stopaccountmark"">停用中</div>
                                    </div>
                                </td>
                                <td>
                                    <div");
            BeginWriteAttribute("class", " class=\"", 1457, "\"", 1465, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                                        <p>{{ item.account }}</p>
                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <p>{{ item.email }}</p>
                                    </div>
                                </td>
                                <td>
                                    <div");
            BeginWriteAttribute("class", " class=\"", 1926, "\"", 1934, 0);
            EndWriteAttribute();
            WriteLiteral(@">

                                        <span class=""count"">{{ item.accountName }}</span>

                                    </div>
                                </td>
                                <td>
                                    <div>
                                        <p>{{ item.authorityName }}</p>
                                    </div>
                                </td>
                                <td>
                                    <button class=""editaccount"" ");
            WriteLiteral("@click=\"EditUserModal(index)\">編輯</button>\r\n                                    <button class=\"stopaccount\" v-if=\"item.deactivated == 0\" ");
            WriteLiteral("@click=\"StopAccountModal(index)\">停用帳號</button>\r\n                                    <button class=\"enableaccount\" v-else ");
            WriteLiteral(@"@click=""EnableAccount(index)"">啟用帳號</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- AddAccountModal -->
    <div class=""modal fade"" id=""AddAccountModal"" data-backdrop=""static"" data-keyboard=""false"" tabindex=""-1"" aria-labelledby=""staticBackdropLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-scrollable"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""staticBackdropLabel"">新增管理員帳號</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""confirmProduct"">
                        <div class=""row justify-content-center"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95a33c59ea91bbe4e0cc725566033095d3316d449257", async() => {
                WriteLiteral(@"
                                <h5 class=""text-start text-dark pb-2"">
                                    管理員資訊
                                </h5>
                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 4104, "\"", 4112, 0);
                EndWriteAttribute();
                WriteLiteral(@" for=""useraccount "">管理員帳號</label>
                                    <input disabled type=""text"" class=""form-control"" name=""account"" id=""useraccount""
                                           placeholder=""輸入帳號"" :value=""userInfo.Account"" />
                                </div>
                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 4524, "\"", 4532, 0);
                EndWriteAttribute();
                WriteLiteral(@" for=""userpassword"">管理員預設密碼</label>
                                    <input v-validate=""'required'"" data-vv-as=""field"" type=""text"" class=""form-control"" name=""userpassword"" id=""userpassword""
                                           placeholder=""請輸入預設密碼"" v-model=""userInfo.Password"" />
                                    <span class=""text-danger"" v-if=""errors.has('userpassword')"">密碼欄位不得留空</span>
                                </div>
                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 5104, "\"", 5112, 0);
                EndWriteAttribute();
                WriteLiteral(@" for=""useremail"">管理員Email</label>
                                    <input v-validate=""'required|email'"" type=""email"" class=""form-control"" name=""email"" id=""useremail""
                                           placeholder=""請輸入Email"" v-model=""userInfo.Email"" />
                                    <span class=""text-danger"" v-if=""errors.has('email')"">請輸入正確EMAIL格式或不得留空</span>
                                </div>

                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 5662, "\"", 5670, 0);
                EndWriteAttribute();
                WriteLiteral(@" for=""username "">管理員名稱</label>
                                    <input v-validate=""'required'"" data-vv-as=""field"" type=""text"" class=""form-control"" name=""name"" id=""username""
                                           placeholder=""輸入名稱"" v-model=""userInfo.AccountName"" />
                                    <span class=""text-danger"" v-if=""errors.has('name')"">名稱欄位不得留空</span>
                                </div>
                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 6217, "\"", 6225, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n                                           for=\"authority\">管理員權限</label>\r\n                                    <select id=\"authority\">\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95a33c59ea91bbe4e0cc725566033095d3316d4411887", async() => {
                    WriteLiteral("請選擇管理員權限");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95a33c59ea91bbe4e0cc725566033095d3316d4412944", async() => {
                    WriteLiteral("全功能");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08d4380b4fa2c6c833e18f46c4b38856273a9c9e16317", async() => {
                    WriteLiteral("會員管理&訂單管理");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08d4380b4fa2c6c833e18f46c4b38856273a9c9e17584", async() => {
                    WriteLiteral("首頁管理&總覽");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08d4380b4fa2c6c833e18f46c4b38856273a9c9e18849", async() => {
                    WriteLiteral("管理員帳號管理");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    </select>\r\n                                    <span class=\"text-danger\" v-if=\"errors.has(\'authority\')\">請選擇管理員權限</span>\r\n                                </div>\r\n\r\n                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
                <div class=""modal-footer d-flex"">
                    <button type=""button"" class=""w-25 btn btn-warning"" v-on:click=""AddUser"">加入</button>
                    <button type=""button"" class=""w-25 btn btn-dark"" data-dismiss=""modal"">關閉</button>
                </div>
            </div>
        </div>
    </div>

    <!-- EditAccountModal -->
    <div class=""modal fade"" id=""EditAccountModal"" data-backdrop=""static"" data-keyboard=""false"" tabindex=""-1"" aria-labelledby=""staticBackdropLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-scrollable"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""staticBackdropLabel"">編輯管理員資訊</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                ");
            WriteLiteral("    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"confirmProduct\">\r\n                        <div class=\"row justify-content-center\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08d4380b4fa2c6c833e18f46c4b38856273a9c9e22712", async() => {
                WriteLiteral(@"
                                <h5 class=""text-start text-dark pb-2"">
                                    管理員資訊
                                </h5>

                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 8670, "\"", 8678, 0);
                EndWriteAttribute();
                WriteLiteral(@" for=""useremail"">管理員Email</label>
                                    <input type=""email"" class=""form-control"" name=""editemail"" id=""useremail""
                                           placeholder=""請輸入Email"" v-model=""userModal.email"" />
                                </div>

                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 9088, "\"", 9096, 0);
                EndWriteAttribute();
                WriteLiteral(@" for=""username "">管理員名稱</label>
                                    <input type=""text"" class=""form-control"" name=""editname"" id=""username""
                                           placeholder=""輸入名稱"" v-model=""userModal.accountName"" />
                                </div>
                                <div class=""form-group text-start text-dark mb-2"">
                                    <label");
                BeginWriteAttribute("class", " class=\"", 9500, "\"", 9508, 0);
                EndWriteAttribute();
                WriteLiteral(@"
                                           for=""authority"">管理員權限</label>
                                    <br />
                                    <select id=""authority"" class=""form-control"" v-model=""userModal.authority"" name=""editauthority"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08d4380b4fa2c6c833e18f46c4b38856273a9c9e24868", async() => {
                    WriteLiteral("---請選擇管理員權限---");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95a33c59ea91bbe4e0cc725566033095d3316d4414205", async() => {
                    WriteLiteral("會員管理&訂單管理");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95a33c59ea91bbe4e0cc725566033095d3316d4415472", async() => {
                    WriteLiteral("首頁管理&總覽");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95a33c59ea91bbe4e0cc725566033095d3316d4416737", async() => {
                    WriteLiteral("管理員帳號管理");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "08d4380b4fa2c6c833e18f46c4b38856273a9c9e29933", async() => {
                    WriteLiteral("管理員帳號管理");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    </select>\r\n                                </div>\r\n\r\n                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>
                </div>
                <div class=""modal-footer d-flex"">
                    <button type=""button"" class=""w-25 btn btn-warning"" v-on:click=""UpdateUserInfo"">更新</button>
                    <button type=""button"" class=""w-25 btn btn-dark"" data-dismiss=""modal"">關閉</button>
                </div>
            </div>
        </div>
    </div>
    <!-- StopAccountModal -->
    <div class=""modal fade"" id=""StopAccountModal"" data-backdrop=""static"" data-keyboard=""false"" tabindex=""-1"" aria-labelledby=""staticBackdropLabel"" aria-hidden=""true"">
        <div class=""modal-dialog modal-dialog-scrollable"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""staticBackdropLabel"">是否確認要進行停用帳號?</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
      ");
            WriteLiteral(@"              </button>
                </div>
                <div class=""modal-body"">
                    <div class=""confirmProduct"">
                        <div class=""row justify-content-center"">
                            <div class=""col-12"">
                                <h5 class=""text-start text-dark pb-2"">
                                    <i class=""fas fa-exclamation-triangle"">若停用帳號此帳號將無法繼續使用</i>
                                </h5>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer d-flex"">
                    <button type=""button"" class=""w-25 btn btn-danger"" v-on:click=""StopAccount"">確定</button>
                    <button type=""button"" class=""w-25 btn btn-dark"" data-dismiss=""modal"">關閉</button>
                </div>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("TopCSS", async() => {
                WriteLiteral(@"
    <style>

        .addaccountbtn {
            width: 90px;
            height: 40px;
            border-radius: 5px;
            color: white;
            background-color: #5b7dca;
            background-repeat: no-repeat;
            font-weight: bolder;
            margin-bottom: 10px;
            margin-left: 30px;
            font-size: 15px;
            border: 0.5px solid #9e9696;
        }

        .stopaccount,
        .enableaccount,
        .editaccount {
            width: 70px;
            height: 30px;
            border-radius: 5px;
            color: white;
            background-color: #5b7dca;
            background-repeat: no-repeat;
            font-weight: bolder;
            font-size: 13px;
            margin: 0 10px 0 0;
            border: 0.5px solid #9e9696;
        }

        .stopaccount {
            background-color: #914040;
        }

        .enableaccount {
            background-color: #6a6963;
        }

        .stopaccountmark");
                WriteLiteral(" {\r\n            color: #800c0c;\r\n        }\r\n\r\n        tr {\r\n            text-align: center;\r\n        }\r\n    </style>\r\n\r\n");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("endJS", async() => {
                WriteLiteral("\r\n    <!-- jsdelivr cdn -->\r\n    <script");
                BeginWriteAttribute("src", " src=\"", 13441, "\"", 13517, 2);
                WriteAttributeValue("", 13447, "https://cdn.jsdelivr.net/npm/vee-validate", 13447, 41, true);
                WriteLiteral("@");
                WriteAttributeValue("", 13490, "<3.0.0/dist/vee-validate.js", 13490, 27, true);
                EndWriteAttribute();
                WriteLiteral("></script>\r\n\r\n    <!-- unpkg -->\r\n    <script");
                BeginWriteAttribute("src", " src=\"", 13563, "\"", 13607, 2);
                WriteAttributeValue("", 13569, "https://unpkg.com/vee-validate", 13569, 30, true);
                WriteLiteral("@");
                WriteAttributeValue("", 13601, "<3.0.0", 13601, 6, true);
                EndWriteAttribute();
                WriteLiteral(@"></script>
    <script src=""https://cdn.jsdelivr.net/npm/sweetalert2@9""></script>
    <script src=""https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js""></script>


    <script>
        Vue.use(VeeValidate); // good to go.
    </script>

    <!-- Vue toasted -->
    <script src=""https://unpkg.com/vue-toasted""></script>

    <script>
        Vue.use(Toasted)
    </script>
    <script>
        let Account = new Vue({
            el: ""#account"",
            data: {
                userdataArray: [],
                userModal: {},

                userInfo: {
                    AccountName: '',
                    Password: '',
                    Email: '',
                    Account: '',
                    Authority: '',
                    Deactivated: '0'
                }
            },
            methods: {
                GetUserData() {
                    axios.get('/api/LoginApi/GetUserAccountData')
                        .then(res => {
                            ");
                WriteLiteral(@"this.userdataArray = res.data.result;
                            this.userInfo.Account = this.userdataArray[0].newAccountNumber
                            console.log(this.userdataArray)
                        })
                },
                AddUserModal() {
                    this.GetUserData();
                    
                    $('#AddAccountModal').modal('show')
                },
                AddUser() {
                    this.$validator.validate()
                        .then((result) => {
                        if (result) {
                            axios.post(`/api/LoginApi/AddUser`, this.userInfo)
                                .then(res => {
                                    console.log(res.data.result)
                                    this.GetUserData();
                                    $('#AddAccountModal').modal('hide')
                                    this.userInfo.AccountName = ''
                                    this.userInfo.Passwor");
                WriteLiteral(@"d = ''
                                    this.userInfo.Email = ''
                                    this.userInfo.Authority = ''
                                    this.$validator.reset();
                                })
                        }
                        else {
                            console.log('錯誤')
                        }
                        })
                },
                EditUserModal(index) {
                    this.userModal = this.userdataArray[index]
                    console.log(this.userModal)
                    $('#EditAccountModal').modal('show')
                },
                UpdateUserInfo() {
                    axios.put(`/api/LoginApi/UpdateUserInfo?AdminId=${this.userModal.adminId}`, this.userModal)
                        .then(res => {
                            if (res.data.result) {
                                this.$toasted.show(""更新成功！！"", {
                                    theme: ""outline"",
                  ");
                WriteLiteral(@"                  position: ""top-center"",
                                    duration: 1000
                                });
                                this.GetUserData();
                                $('#EditAccountModal').modal('hide')
                            }
                            else {
                                this.$toasted.show(`更新失敗 + ${res.data.ErrMsg}`, {
                                    theme: ""outline"",
                                    position: ""top-center"",
                                    duration: 1000
                                });
                            }
                        })
                },
                StopAccountModal(index) {
                    this.userModal = this.userdataArray[index]
                    $('#StopAccountModal').modal('show')
                },
                StopAccount() {
                    axios.put(`/api/LoginApi/UpdateUserDeactivated?adminId=${this.userModal.adminId}&deactivatedNumbe");
                WriteLiteral(@"r=1`)
                        .then(res => {
                            if (res.data.result) {
                                this.$toasted.show(""帳號已停用"", {
                                    theme: ""outline"",
                                    position: ""top-center"",
                                    duration: 1000
                                });
                                this.GetUserData();
                                $('#StopAccountModal').modal('hide')
                            }
                            else {
                                this.$toasted.show(`更新失敗 + ${res.data.ErrMsg}`, {
                                    theme: ""outline"",
                                    position: ""top-center"",
                                    duration: 1000
                                });
                            }
                        })
                },
                EnableAccount(index) {
                    this.userModal = this.userdataArray[inde");
                WriteLiteral(@"x];
                    axios.put(`/api/LoginApi/UpdateUserDeactivated?adminId=${this.userModal.adminId}&deactivatedNumber=0`)
                        .then(res => {
                            if (res.data.result) {
                                this.$toasted.show(""帳號已開啟"", {
                                    theme: ""outline"",
                                    position: ""top-center"",
                                    duration: 1000
                                });
                                this.GetUserData();
                                $('#StopAccountModal').modal('hide')
                            }
                            else {
                                this.$toasted.show(`更新失敗 + ${res.data.ErrMsg}`, {
                                    theme: ""outline"",
                                    position: ""top-center"",
                                    duration: 1000
                                });
                            }
                        })");
                WriteLiteral("\r\n                }\r\n\r\n            },\r\n            created() {\r\n                this.GetUserData();\r\n\r\n            }\r\n        })\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
