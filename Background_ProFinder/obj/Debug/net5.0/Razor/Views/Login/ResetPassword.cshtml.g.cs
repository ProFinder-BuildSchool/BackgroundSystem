#pragma checksum "C:\Users\ac556\source\repos\BackgroundSystem\Background_ProFinder\Views\Login\ResetPassword.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e3969ab666d9fb7f177e7e55bbeddc5c658eeee2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Login_ResetPassword), @"mvc.1.0.view", @"/Views/Login/ResetPassword.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\ac556\source\repos\BackgroundSystem\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ac556\source\repos\BackgroundSystem\Background_ProFinder\Views\_ViewImports.cshtml"
using Background_ProFinder.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e3969ab666d9fb7f177e7e55bbeddc5c658eeee2", @"/Views/Login/ResetPassword.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1042ab2bd1801a3916ccb856993cba548ccba7e5", @"/Views/_ViewImports.cshtml")]
    public class Views_Login_ResetPassword : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\ac556\source\repos\BackgroundSystem\Background_ProFinder\Views\Login\ResetPassword.cshtml"
  
    ViewData["Title"] = "ResetPassword";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container mt-4\" id=\"resetpassword\">\r\n    <h1 class=\"text-center\">修改密碼</h1>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4 formdiv mx-auto py-2\">\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e3969ab666d9fb7f177e7e55bbeddc5c658eeee23766", async() => {
                WriteLiteral("\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"AccountName\" class=\"control-label\">欲更改之密碼</label>\r\n                    <a class=\"ml-2\" v-if=\"pwdFlag\" ");
                WriteLiteral("@click=\"IsShowPassword\"><i class=\"far fa-eye\"></i></a>\r\n                    <a class=\"ml-2\" v-else ");
                WriteLiteral("@click=\"IsShowPassword\"><i class=\"far fa-eye-slash\"></i></a>\r\n                    <input for=\"AccountName\" class=\"form-control\" id=\"userAccount\" v-model=\"password\" :type=\"pwdFlag?\'password\':\'text\'\" ");
                WriteLiteral(@"@change=""CheckPasswordType"" />

                    <span class=""text-danger font-weight-bolder"">{{ typemsg }}</span>
                </div>

                <div class=""form-group"">
                    <label for=""Password"" class=""control-label"">確認密碼</label>
                    <a class=""ml-2"" v-if=""confirmPwd"" ");
                WriteLiteral("@click=\"IsConfirmShowPassword\"><i class=\"far fa-eye\"></i></a>\r\n                    <a class=\"ml-2\" v-else ");
                WriteLiteral(@"@click=""IsConfirmShowPassword""><i class=""far fa-eye-slash""></i></a>
                    <input for=""Password"" class=""form-control"" id=""userePassword"" :type=""confirmPwd?'password':'text'"" v-model=""checkPassword"" :style=""{ 'border-color' : error? 'red':'' }"" />
                    <span class=""text-danger font-weight-bolder"">{{ msg }}</span>
                </div>

                <div class=""form-group d-flex justify-content-center mt-2"">
                    <button :class=""isDisabled?'disablentb':'postbtn'"" ");
                WriteLiteral("@click.prevent=\"ResetPsw\" :disabled=\"isDisabled\">確認修改</button>\r\n                </div>\r\n            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("TopCSS", async() => {
                WriteLiteral(@"
    <style>
        .postbtn {
            width: 90px;
            height: 40px;
            border-radius: 5px;
            color: white;
            background-color: #5b7dca;
            background-repeat: no-repeat;
            font-weight: bolder;
            margin-bottom: 10px;
            margin-left: 30px;
            font-size: 15px;
            border: 0.5px solid #9e9696;
        }
        .disablentb {
            width: 90px;
            height: 40px;
            border-radius: 5px;
            color: white;
            background-color: #9e9696;
            opacity:.5;
            background-repeat: no-repeat;
            font-weight: bolder;
            margin-bottom: 10px;
            margin-left: 30px;
            font-size: 15px;
            border: 0.5px solid #9e9696;
        }
    </style>
");
            }
            );
            WriteLiteral("\r\n");
            DefineSection("endJS", async() => {
                WriteLiteral(@"
    <script src=""https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js""></script>
    <!-- Vue toasted -->
    <script src=""https://unpkg.com/vue-toasted""></script>

    <script>
        Vue.use(Toasted)
    </script>
    <script>
        let resetpassword = new Vue({
            el: '#resetpassword',
            data: {
                password: '',
                pwdFlag: true,
                confirmPwd: true,
                checkPassword: '',
                msg: '',
                typemsg: '',
                error: '',
                adminId: '',
                isDisabled:true
            },
            methods: {
                IsShowPassword() {
                    this.pwdFlag = !this.pwdFlag
                },
                IsConfirmShowPassword() {
                    this.confirmPwd = !this.confirmPwd
                },
                CheckPasswordType() {
                    let PasswordReg = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[^]{8,16}$/;
                    i");
                WriteLiteral(@"f (!PasswordReg.test(this.password)) {
                        this.typemsg = '密碼欄位格式錯誤 (密碼需包含至少各1個英文大小寫及數字，並大於等於8個字符，不包含特殊字符)'
                    }
                    else {
                        this.typemsg = ''
                    }
                },
                ResetPsw() {
                    this.adminId = ");
#nullable restore
#line 108 "C:\Users\ac556\source\repos\BackgroundSystem\Background_ProFinder\Views\Login\ResetPassword.cshtml"
                              Write(ViewData["AdminId"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        axios.put(`/api/LoginApi/UpdatePassword?adminId=${this.adminId}&psw=${this.password}`)
                            .then(res => {
                                if (res.data.result) {
                                    this.$toasted.show(""密碼更新成功"", {
                                        theme: ""outline"",
                                        position: ""top-center"",
                                        duration: 1000
                                    });
                                    this.password = ''
                                    this.pwdFlag = true
                                    this.confirmPwd = true
                                    this.checkPassword = ''
                                    this.msg = ''
                                    this.typemsg = ''
                                }
                                else {
                                    this.$toasted.show(`密碼更新失敗 + ${res.data.ErrMsg}`, {
                 ");
                WriteLiteral(@"                       theme: ""outline"",
                                        position: ""top-center"",
                                        duration: 1000
                                    });
                                }
                            })
                },
            },
            watch: {
                checkPassword: function () {
                    if (this.checkPassword != this.password) {
                        this.msg = '密碼不符'
                        this.error = true;
                        this.isDisabled = true;
                    }
                    else {
                        this.msg = '密碼符合'
                        this.error = false;
                        this.isDisabled = false;
                    }
                },
            }
        })
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
